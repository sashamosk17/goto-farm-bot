from datetime import datetime, timezone, timedelta
import time

def event(user, bot, helpers):
    print("Event in garden")

def welcome(user, bot, helpers):
    bot.send_message(user['id'],
                     "–í—ã –Ω–∞ –æ–≥–æ—Ä–æ–¥–µ. –£ –≤–∞—Å –µ—Å—Ç—å –≥—Ä—è–¥–∫–∞ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã—Ä–∞—â–∏–≤–∞—Ç—å 10 –æ–≤–æ—â–µ–π. –ü–æ–∫—É–ø–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≥—Ä—è–¥–∫–∏ –º–æ–∂–Ω–æ –≤ –º–∞–≥–∞–∑–∏–Ω–µ.\n"
                     "/goto shop \n"
                     "–ß—Ç–æ–±—ã –∑–∞—Å–∞–¥–∏—Ç—å –≥—Ä—è–¥–∫–∏ –≤–≤–µ–¥–∏—Ç–µ /plant")
    current_time = datetime.now(timezone(timedelta(hours=3)))
    hour = current_time.hour

def select_ovosh(message, user, bot, helpers):
    product = user["height"] * user["width"]
    if message.text in list(helpers.vegetables.keys()):
            if helpers.vegetables[message.text][1] * product <= user['balance']:
                user["what_plant"] = message.text
                bot.send_message(user['id'], ('[{}]'.format(message.text) * user['width'] + "\n") * user['height'])
                user[helpers.vegetables[message.text][0]] = product
                user["balance"] -= (helpers.vegetables[message.text][1] * product)
                bot.send_message(user['id'], "–í–∞—à –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {} –º–æ–Ω–µ—Ç".format(user["balance"]))
                user["field_condition"] = 1
            else:
                bot.send_message(user['id'], "–£ –≤–∞—Å –Ω–µ–¥–æ—Å–∞—Ç–æ—á–Ω–æ –¥–µ–Ω—è–∫")
    '''
    if message.text == 'ü•ï':
        user["what_plant"] = "ü•ï"
        bot.send_message(user['id'],  ('[ü•ï]' * user['width'] + "\n") * user['height'])
        user["carrot"] = product
        user["balance"] = user["balance"] - (0 * product)
        bot.send_message(user['id'], "–í–∞—à –±–∞–ª–∞–Ω—Å {}".format(user["balance"]))
    elif message.text == "ü•î" and user['balance'] >= 100 * product:
        user["what_plant"] = "ü•î"
        bot.send_message(user['id'],  ('[ü•î]' * user['width'] + "\n") * user['height'])
        user["potato"] = product
        user["balance"] = user["balance"] - (100 * product)
        bot.send_message(user['id'], "–í–∞—à –±–∞–ª–∞–Ω—Å {}".format(user["balance"]))
    elif message.text == "üçÜ" and user['balance'] >= 500 * product:
        user["what_plant"] = "üçÜ"
        bot.send_message(user['id'],  ('[üçÜ]' * user['width'] + "\n") * user['height'])
        user["eggplant"] = product
        user["balance"] = user["balance"] - (500 * product)
        bot.send_message(user['id'], "–í–∞—à –±–∞–ª–∞–Ω—Å {}".format(user["balance"]))
    elif message.text == "ü´ë" and user['balance'] >= 1000 * product:
        user["what_plant"] = "ü´ë"
        bot.send_message(user['id'],  ('[ü´ë]' * user['width'] + "\n") * user['height'])
        user["pepper"] = product
        user["balance"] = user["balance"] - (1000 * user["height"] * user["width"])
        bot.send_message(user['id'], "–í–∞—à –±–∞–ª–∞–Ω—Å {}".format(user["balance"]))
    elif message.text == "üå∂" and user['balance'] >= 1500 * product:
        user["what_plant"] = "üå∂"
        bot.send_message(user['id'],  ('[üå∂]' * user['width'] + "\n") * user['height'])
        user["pepper_hot"] = product
        user["balance"] = user["balance"] - (1500 * product)
        bot.send_message(user['id'], "–í–∞—à –±–∞–ª–∞–Ω—Å {}".format(user["balance"]))
    elif message.text == "üçÑ" and user['balance'] >= 1700 * product:
        user["what_plant"] = "üçÑ"
        bot.send_message(user['id'], ('[üçÑ]' * user['width'] + "\n") * user['height'])
        user["mushrooms"] = product
        user["balance"] = user["balance"] - (1700 * product)
        bot.send_message(user['id'], "–í–∞—à –±–∞–ª–∞–Ω—Å {}".format(user["balance"]))
    else:
        bot.send_message(user['id'], "–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω—è–∫")
    '''
    bot.send_message(message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É")
    bot.register_next_step_handler(message, lambda x:process_message(x,user,bot,helpers))

def process_message(message, user, bot, helpers):
    print(message)
    buttons = ["ü•ï", "ü•î", "üçÜ", "ü´ë", "üå∂", "üçÑ"]
    keyboard = helpers.generate_keyboard(buttons)
    user["field_condition"] = 0
    user["field"] = [["[","]"], ["[","]"],["[","]"],["[","]"],["[","]"],["[","]"],["[","]"],["[","]"],["[","]"]]
    if message.text == '/plant':
        bot.send_message(user['id'], "–í—ã–±–µ—Ä–∏—Ç–µ –æ–≤–æ—â", reply_markup= keyboard)
        bot.register_next_step_handler(message, lambda x:select_ovosh(x, user, bot, helpers))
    if message.text == '/gather':
        bot.send_message(user['id'], "–°–æ–±–∏—Ä–∞–µ–º –æ–≤–æ—â–∏")
        bot.send_message(user['id'], "–í—ã –ø–æ–ª—É—á–∏–ª–∏ {} {}".format(user["height"] * user["width"], user["what_plant"]))
        user["field_condition"] = 0
    if message.text == "/field":
        if user["field_condition"] == 0:
            bot.send_message(user['id'], "–í–∞—à–µ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ")
        else:
            if user["field_condition"] == 1:
                bot.send_message(user['id'], "–í–∞—à–µ –ø–æ–ª–µ –∑–∞—Å–µ—è–Ω–æ")
