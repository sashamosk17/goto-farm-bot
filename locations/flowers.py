from datetime import datetime, timezone, timedelta
import time
from content import goods
from threading import Thread


def welcome(user, bot, helpers):
    keyboard = helpers.generate_keyboard(['–ü–æ—Å–∞–¥–∏—Ç—å —Ü–≤–µ—Ç—ã', '–°–æ–±—Ä–∞—Ç—å —Ü–≤–µ—Ç—ã', '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª–µ',
                                          "–£–¥–æ–±—Ä–∏—Ç—å –ø–æ—á–≤—É", '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Ñ–µ—Ä–º—É'])
    bot.send_message(user['id'],
                     "–í—ã –≤ —Å–∞–¥—É üåº. –£ –≤–∞—Å –µ—Å—Ç—å –≥—Ä—è–¥–∫–∏ ({}), –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã—Ä–∞—â–∏–≤–∞—Ç—å —Ü–≤–µ—Ç—ã. "
                     "–ü–æ–∫—É–ø–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≥—Ä—è–¥–∫–∏ –º–æ–∂–Ω–æ –≤ –º–∞–≥–∞–∑–∏–Ω–µ.".format(user['height'] * user['width']),
                     reply_markup=keyboard)
    current_time = datetime.now(timezone(timedelta(hours=3)))
    hour = current_time.hour


def event(user, bot, helpers):
    print("Event in flowers")


def select_flower(message, user, bot, helpers):
    buttons = ['–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Ñ–µ—Ä–º—É', '–ù–∞–∑–∞–¥']
    keyboard = helpers.generate_keyboard(buttons)
    if message.text == "–ù–∞–∑–∞–¥":
        helpers.change_location(user, 'flowers', bot, helpers)
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Ñ–µ—Ä–º—É":
        helpers.change_location(user, "farm", bot, helpers)
    product = user["height"] * user["width"]
    if message.text in list(goods.flowers.keys()):
        if goods.flowers[message.text][1] * product <= user['balance']:
            user["what_flower"] = message.text
            user["plantf_time"] = time.time()
            user[goods.flowers[message.text][0]] = product
            user["balance"] -= (goods.flowers[message.text][1] * product)
            bot.send_message(user['id'], "–í–∞—à –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {} –º–æ–Ω–µ—Ç".format(user["balance"]),
                             reply_markup=keyboard)
            user["flowers_condition"] = 1
            user["growf_time"] = goods.flowers[message.text][2]
            if user['f_buster']:
                user['growf_time'] *= 0.8
                user['f_buster'] = False
            print(user["flowers_condition"])
            msg = bot.send_message(user['id'], ('[.]' * user['width'] + "\n") * user['height'])
            flowers_animation = Thread(target=animate_of_grow, args=(msg.message_id, user, bot))
            flowers_animation.start()
            helpers.change_location(user, "flowers", bot, helpers)
        else:
            bot.send_message(user['id'], "–£ –≤–∞—Å –Ω–µ–¥–æ—Å–∞—Ç–æ—á–Ω–æ –¥–µ–Ω—è–∫")
    elif user["flowers_condition"] == 1:
        bot.send_message(user['id'], "–í–∞—à–µ –ø–æ–ª–µ –∑–∞—Å–∞–∂–µ–Ω–æ",
                         reply_markup=keyboard)
    else:
        bot.send_message(user['id'], "–£ –≤–∞—Å –Ω–µ–¥–æ—Å–∞—Ç–æ—á–Ω–æ –¥–µ–Ω—è–∫", reply_markup=keyboard)
    bot.register_next_step_handler(message, lambda x: process_message(x, user, bot, helpers))


def animate(message_id, chat_id, bot, user):
    time.sleep(0.5)
    for i in range(1, 11):
        bot.edit_message_text("[ ]\n" * i + ("[" + user["what_flower"] + "] " + "\n") * (11 - i), chat_id, message_id)
    time.sleep(0.5)

def animate_of_grow(message_id, user, bot):
    time.sleep(user['grow_time'])
    bot.edit_message_text(text=('[{}]'.format(user['what_flower']) * user['width'] + "\n") * user['height'],
                          message_id=message_id, chat_id=user['id'])


def start(message, user, bot):
    message = bot.send_message(message.chat.id, ("[", user["what_flower"] * user['width'] + "]\n") * user['height'])
    print(("[", user["what_flower"] * user['width'] + "]\n") * user['height'])
    t = Thread(target=animate, args=(message.id, message.chat.id, bot, user))
    t.start()


def process_message(message, user, bot, helpers, users):
    print(message)
    buttons = ["üåª", "üå∑", "‚òò", "üåπ", "üåµ", '–ù–∞–∑–∞–¥']
    keyboard = helpers.generate_keyboard(buttons)
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Ñ–µ—Ä–º—É":
        helpers.change_location(user, "farm", bot, helpers)
        return
    if message.text == "–ù–∞–∑–∞–¥":
        helpers.change_location(user, 'flowers', bot, helpers)
    user["flowers"] = [["[", "]"], ["[", "]"], ["[", "]"], ["[", "]"], ["[", "]"], ["[", "]"], ["[", "]"], ["[", "]"]]
    if message.text == "–£–¥–æ–±—Ä–∏—Ç—å –ø–æ—á–≤—É":
        if not user['f_buster']:
            if user['buster_willingness']:
                if user['flowers_condition'] == 1:
                    bot.send_message(user['id'], "–£–¥–æ–±—Ä–µ–Ω–∏–µ –Ω—É–∂–Ω–æ —Å—ã–ø–∞—Ç—å –Ω–∞ –Ω–µ–∑–∞—Å–µ—è–Ω–Ω—É—é –ø–æ—á–≤—É")
                    return
                else:
                    user['f_buster'] = True
                    user['buster_willingness'] = False
                    bot.send_message(user['id'], "–¢–µ–ø–µ—Ä—å –ø–æ–ª–µ —É–¥–æ–±—Ä–µ–Ω–æ")
            else:
                bot.send_message(user['id'], "–£ –≤–∞—Å –Ω–µ—Ç —É–¥–æ–±—Ä–Ω–∏–π")
                return
        else:
            bot.send_message(user['id'], "–í–∞—à–µ –ø–æ–ª—è —É–∂–µ —É–¥–æ–±—Ä–µ–Ω–æ")
            return
    if message.text == '–ü–æ—Å–∞–¥–∏—Ç—å —Ü–≤–µ—Ç—ã':
        bot.send_message(user['id'], "–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤—ç—Ç–æ–∫", reply_markup=keyboard)
        bot.register_next_step_handler(message, lambda x: select_flower(x, user, bot, helpers))
    if message.text == '–°–æ–±—Ä–∞—Ç—å —Ü–≤–µ—Ç—ã':
        if (time.time() > user["plantf_time"] + user["growf_time"] + 60 * 60):
            bot.send_message(user['id'], "–¶–≤–µ—Ç—ã —Å–≥–Ω–∏–ª–∏ :(")
            user["flowers_condition"] = 0
            return
        if (time.time() - user["plantf_time"] < user["growf_time"]):
            get_time(message, user, bot, keyboard)
            # bot.send_message(user['id'], "—Ü–≤–µ—Ç—ã –Ω–µ —Å–æ–∑—Ä–µ–ª–∏. –û—Å—Ç–∞–ª–æ—Å—å {} –º–∏–Ω—É—Ç".format(int(user["plantf_time"]+user["growf_time"] - time.time())//60),  reply_markup=keyboard)
        if user["flowers_condition"] == 0:
            bot.send_message(user['id'], "–í–∞—à–µ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ")
        elif (time.time() - user["plantf_time"] > user["growf_time"]):
            bot.send_message(user['id'], "–°–æ–±–∏—Ä–∞–µ–º —Ü–≤–µ—Ç—ã")
            start(message, user, bot)
            bot.send_message(user['id'],
                             "–í—ã –ø–æ–ª—É—á–∏–ª–∏ {} {}".format(user["height"] * user["width"], user["what_flower"]),
                             reply_markup=keyboard)
            user["flowers_condition"] = 0
    if message.text == "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª–µ":
        if user["flowers_condition"] == 0:
            bot.send_message(user['id'], "–í–∞—à–µ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ")
            helpers.change_location(user, "flowers", bot, helpers)
        else:
            get_time(message, user, bot, keyboard)
            helpers.change_location(user, "flowers", bot, helpers)


def get_time(message, user, bot, keyboard):
    needed_time = user["plantf_time"] + user["growf_time"] - time.time()
    minutes = int((user["plantf_time"] + user["growf_time"] - time.time()) / 60)
    seconds = int(needed_time - minutes * 60)
    x = seconds % 10
    if x == 0 or 5 <= x <= 9 or 11 <= seconds % 100 <= 14:
        bot.send_message(user['id'], "–¶–≤–µ—Ç—ã –Ω–µ —Ä–∞—Å—Ü–≤–µ–ª–∏. –û—Å—Ç–∞–ª–æ—Å—å {} –º–∏–Ω—É—Ç, {} —Å–µ–∫—É–Ω–¥".format(minutes, seconds),
                         reply_markup=keyboard)
    elif x == 1:
        bot.send_message(user['id'], "–¶–≤–µ—Ç—ã –Ω–µ —Ä–∞—Å—Ü–≤–µ–ª–∏. –û—Å—Ç–∞–ª–æ—Å—å {} –º–∏–Ω—É—Ç, {} —Å–µ–∫—É–Ω–¥–∞".format(minutes, seconds),
                         reply_markup=keyboard)
    else:
        bot.send_message(user['id'], "–¶–≤–µ—Ç—ã –Ω–µ —Ä–∞—Å—Ü–≤–µ–ª–∏. –û—Å—Ç–∞–ª–æ—Å—å {} –º–∏–Ω—É—Ç, {} —Å–µ–∫—É–Ω–¥—ã".format(minutes, seconds),
                         reply_markup=keyboard)
